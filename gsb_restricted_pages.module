<?php

/**
 * Implements hook_permission().
 */
function gsb_restricted_pages_permission() {
  return array(
    'restricted pages' => array(
      'title' => t('Add restricted page settings on a node'),
      'description' => t('Set restricted page settings on a node.'),
      'restrict access' => TRUE,
    )
  );
}

/**
 * Implementation of hook_init
 * Checks if the page is restricted and if so... then based on the access_type -
 * calls any module that has a gsb_restricted_pages_info callback.
 */
function gsb_restricted_pages_init() {

  $node = menu_get_object();

  if (empty($node)) {
    return;
  }

  $access_type = db_select('restricted_pages', 'rp')
    ->fields('rp', array('access_type'))
    ->condition('nid', $node->nid, '=')
    ->execute()
    ->fetchField();

  if (!$access_type) {
    return;
  }

  foreach (module_implements('gsb_restricted_pages_info') as $module) {
    $info = call_user_func($module . '_gsb_restricted_pages_info');
    call_user_func($info[$access_type]['callback']);
  }

}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function gsb_restricted_pages_form_node_form_alter(&$form, &$form_state) {

  if (!user_access('restricted pages')) {
    return;
  }

  $access_type = 'everyone';
  if (!empty($form_state['node']) && $form_state['node']->nid != null) {
    $result = db_select('restricted_pages', 'rp')
      ->fields('rp', array('access_type'))
      ->condition('nid', $form_state['node']->nid, '=')
      ->execute()
      ->fetchField();
    $access_type = $result ? $result : 'everyone';
  }

  $form['options']['restricted_pages'] = array(
    '#type' => 'select',
    '#title' => t('Who can see'),
    '#options' => array( 'everyone' => t('Everyone'), 'alumni' => t('Alumni'), 'stanford' => t('Stanford') ),
    '#description' => t('Some description text goes here.'),
    '#default_value' => $access_type,
  );

  $form['actions']['submit']['#submit'][] = 'gsb_restricted_pages_node_submit';

}

/**
 * Handles submit for the node edit form, to save restricted page information.
 */
function gsb_restricted_pages_node_submit($form, &$form_state) {
  if (empty($form_state['node'])) {
    return;
  }
  if (empty($form_state['values']['restricted_pages'])) {
    return;
  }
  $nid = $form_state['node']->nid;
  $access_type = $form_state['values']['restricted_pages'];
  if ($access_type != 'everyone') {
    // write out the restricted page settings
    $fields = array(
      'nid' => $nid,
      'access_type' => $access_type,
    );
    db_merge('restricted_pages')
      ->fields($fields)
      ->key(array('nid' => $nid))
      ->execute();
  }
  else {
    db_delete('restricted_pages')
    ->condition('nid', $nid, '=')
    ->execute();
  }
}

/**
 * Implements hook_node_delete
 * @param $node
 * @return unknown_type
 */
function gsb_restricted_pages_node_delete($node) {
  db_delete('restricted_pages')
    ->condition('nid', $node->nid, '=')
    ->execute();
}
